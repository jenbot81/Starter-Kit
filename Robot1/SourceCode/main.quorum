use Libraries.Robots.Lego.Button
use Libraries.Robots.Lego.Sound
use Libraries.Robots.Lego.Screen
use Libraries.Robots.Lego.Motor

Button buttonCtrl
Sound soundCtrl
Screen screenCtrl
Motor motorControl

screenCtrl:OutputCenterLarge("Hello", 1)
screenCtrl:OutputCenterLarge("World", 4)
soundCtrl:Beep()
buttonCtrl:SetLightPattern(3)
repeat until buttonCtrl:IsButtonPressed(buttonCtrl:ESCAPE_BUTTON)
    if buttonCtrl:IsButtonPressed(buttonCtrl:LEFT_BUTTON)
        soundCtrl:PlayTone(1000, 20)
    elseif buttonCtrl:IsButtonPressed(buttonCtrl:RIGHT_BUTTON)
        soundCtrl:PlayTone(2000, 20)
    elseif buttonCtrl:IsButtonPressed(buttonCtrl:UP_BUTTON)
        soundCtrl:BeepSequenceUp()
    elseif buttonCtrl:IsButtonPressed(buttonCtrl:DOWN_BUTTON)
        soundCtrl:BeepSequenceDown()
    elseif buttonCtrl:IsButtonPressed(buttonCtrl:CENTER_BUTTON)
        soundCtrl:BeepTwice()
    end
end
soundCtrl:Buzz()

// We use our motorControl object to issue instructions to the motor
//First we set the speed of the motor as a number between 0 and 100, which represents the 
//percentage of power applied to the motor.  100 represents two revolutions per second.  If
//your robot is low on power or doing too many other things, speed may be affected.
motorControl:SetSpeed("B", 50)
motorControl:SetSpeed("C", 50)
//Next we tell the motors to move forward.
//We tell the motor controller how far to move using degrees.
//Use a variable to represent one full revolution of 360 degrees.
integer turn = 360
motorControl:RotateByDegrees("B", turn * 5)
motorControl:RotateByDegrees("C", turn * 5)
//After a motor instruction, you must also tell Quorum to wait to complete the movement.
motorControl:Wait("B")
motorControl:Wait("C")

motorControl:RotateByDegrees("B", turn * 2)
motorControl:Wait("B")

motorControl:RotateByDegrees("B", turn * 5)
motorControl:RotateByDegrees("C", turn * 5)
motorControl:Wait("B")
motorControl:Wait("C")

// First set the speed of the motor
motorControl:SetSpeed("A", 50)

// Move the small motor 90 degrees (one quarter turn)
motorControl:RotateByDegrees("A", 90)
    
motorControl:Wait("A")
